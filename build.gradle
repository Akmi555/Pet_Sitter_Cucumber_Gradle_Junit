plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'


    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.25.0'
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '7.20.1'
    implementation group: 'io.cucumber', name: 'cucumber-junit', version: '7.20.1'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.9.2'
    implementation 'org.slf4j:slf4j-nop:2.0.7'



    implementation 'org.testng:testng:7.10.2'
    // Для работы с REST API
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
    implementation group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.14'
    implementation group: 'io.rest-assured', name: 'rest-assured', version: '5.5.0'

    // Парсит JSON в JAVA обьекты и обратно
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'
// подключение к базам данных
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'



}

test {
    useJUnitPlatform()
    useTestNG()
}
def registerTask(String taskName, String suitePath){
    tasks.register(taskName, Test){
        useTestNG(){
            suites suitePath
        }
//        if(project.hasProperty('browser')){
//            systemProperty 'browser', "${browser}"
//        }
    }

}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
registerTask('smoke', 'src/test/resources/smoke.xml')
registerTask('regression', 'src/test/resources/regression.xml')